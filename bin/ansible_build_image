#!/bin/sh

# Script to easily build packer images under ansible without having to write a
# lot of tricky playbook code to create and remove a temp directory and move
# the images around.

set -e

images_dir="$1"
image="$2"
format="$3"
version="$4"
checksum="$5"
checksumtype="$6"

# Packer wants the image output directory in the template to *not* exist, but
# the temp directory *should* be created by mktemp for security.  Solve the
# conflict by creating a unique temp directory, then pointing packer to a fixed
# subdirectory of the tempdir.

# create under images dir, since presumably it has lots of space
tempdir="$(mktemp --directory --tmpdir="$images_dir" ansible_image_build_XXXXXXXX)"
var_file="$(mktemp var_file_XXXXXXXX.json)"
build_dir="${tempdir}/build"

# remove tempdir on normal or error exit
trap 'rm -rf "${tempdir}" "${var_file}"' EXIT

# cache downloaded ISOs in images dir
export PACKER_CACHE_DIR="${images_dir}/packer_cache"

# speed up "typing" to boot CD prompt
export PACKER_KEY_INTERVAL=10ms

# remove empty variables from JSON, ensuring last one is one that can't be empty
cat << EOF | grep -v '": "",' > "${var_file}"
{
  "version": "$version",
  "checksum": "$checksum",
  "checksumtype": "$checksumtype",
  "format": "$format",
  "output_dir": "$build_dir"
}
EOF

packer validate -var-file "${var_file}" "$image".json
packer build -var-file "${var_file}" "$image".json

# move the image to the images_dir where ansible expects it
chown libvirt-qemu:libvirt-qemu "${build_dir}/${image}-${version}.${format}"
mv "${build_dir}/${image}-${version}.${format}" "${images_dir}/"
